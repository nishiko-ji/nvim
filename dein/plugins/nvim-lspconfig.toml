[[plugins]]
 repo = 'neovim/nvim-lspconfig'
 on_event = ['BufEnter']
 hook_source = '''
 lua << EOF
 local nvim_lsp = require('lspconfig')
 local on_attach = function (client, bufnr)
 local function buf_set_keymap(...) vim.api.nvim_buf_set_keymap(bufnr, ...) end
 local function buf_set_option(...) vim.api.nvim_buf_set_option(bufnr, ...) end

 local opts = { noremap=true, silent=true }
  buf_set_keymap('n', '<Leader>z', '<Cmd>lua vim.lsp.buf.definition()<CR>', opts)
  buf_set_keymap('n', '<Leader>e', '<Cmd>lua vim.lsp.buf.hover()<CR>', opts)
  buf_set_keymap('n', '<Leader>c', '<cmd>lua vim.lsp.buf.implementation()<CR>', opts)
  buf_set_keymap('n', '<Leader>h', '<cmd>lua vim.lsp.buf.signature_help()<CR>', opts)
  buf_set_keymap('n', '<Leader>b', '<cmd>lua vim.lsp.buf.references()<CR>', opts)
  buf_set_keymap('n', '<Leader>g', '<cmd>lua vim.lsp.diagnostic.show_line_diagnostics()<CR>', opts)
  buf_set_keymap('n', '<Leader>[', '<cmd>lua vim.lsp.diagnostic.goto_prev()<CR>', opts)
  buf_set_keymap('n', '<Leader>]', '<cmd>lua vim.lsp.diagnostic.goto_next()<CR>', opts)
 end

 require'lspconfig'.tsserver.setup{}
 require'lspconfig'.solargraph.setup{}

 require'lspinstall'.setup()
 local servers = require'lspinstall'.installed_servers()
 for _, server in pairs(servers) do
  require'lspconfig'[server].setup{}
 end
EOF
'''

# [[plugins]]
#  repo = 'kabouzeid/nvim-lspinstall'
#  on_source = ['nvim-lspconfig']
#  hook_source = '''
#   lua require'lspinstall'.setup()
# '''

# [[plugins]]
#  repo = 'matsui54/ddc-nvim-lsp-doc'
#  on_source = ['ddc.vim']
#  hook_source = '''
#  let g:ddc_nvim_lsp_doc_config = {
#       \ 'documentation': {
#       \   'enable': v:true,
#       \   'border': 'single',
#       \   'maxWidth': 60,
#       \   'maxHeight': 30,
#       \ },
#       \ 'signature': {
#       \   'maxHeight': 5,
#       \ },
#       \ }
#   call ddc_nvim_lsp_doc#enable()
# '''
